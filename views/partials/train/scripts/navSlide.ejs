<!-- Change to min after production -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.3/socket.io.js"></script>
<!-- Color animation -->
<script src="//cdn.jsdelivr.net/jquery.color-animation/1/mainfile"></script>
<script>
    var $prog = $('#progCount');
    var $hold = $('#trainHold');
    var completed = 0;
    var socket = io({secure: true});
    function doNext(){
        var id = parseInt($(Reveal.getCurrentSlide().parentNode).data('slide').substring(2));
        var ans_id = parseInt($(Reveal.getCurrentSlide().parentNode).data('answer').substring(2));
        var ele = {
            CLUE_ID: id,
            ANSWER_ID: ans_id
        };
        $hold.animate({borderColor: 'green', duration: 400});
        Reveal.right();
        $hold.animate({borderColor: '#111111', duration: 25})
        adjustText(Reveal.getCurrentSlide());
        completed++;

        socket.emit('markClue', ele);

        updateProg((completed / (Reveal.getTotalSlides() / 3)) * 100);


    }
    function doPrev(){
        var $slide = $(Reveal.getCurrentSlide().parentNode);

        //Add slide to stack between 7 and 25 elements from current index
        var rand = randomIntFromInterval(7,25)
        var $chosen = $slide.nextAll().slice(rand, rand+1);
        $slide.insertAfter($chosen);

        //Move after insertion
        $hold.animate({borderColor: 'red', duration: 400});
        Reveal.right();
        $hold.animate({borderColor: '#111111', duration: 25})

        adjustText(Reveal.getCurrentSlide());
    }

    function doUp(){
        Reveal.up();
        adjustText(Reveal.getCurrentSlide());
    }
    function doDown() {
        Reveal.down();
        adjustText(Reveal.getCurrentSlide());
    }

    function doRight(){
        Reveal.right();
    }

    function doLeft(){
        Reveal.left();
        adjustText(Reveal.getCurrentSlide());
        completed--;

        var id = parseInt($(Reveal.getCurrentSlide().parentNode).data('slide').substring(2));
        var ans_id = parseInt($(Reveal.getCurrentSlide().parentNode).data('answer').substring(2));
        var ele = {
            CLUE_ID: id,
            ANSWER_ID: ans_id
        };

        socket.emit('backClue', ele);

        updateProg((completed / (Reveal.getTotalSlides() / 3)) * 100);

    }

    function doSave(){
        socket.emit('saveSet');
        //Whether to show saved progress prompts or not
        /*
        socket.on('savedSuccess', () => {
            initToast.show();
        });
         */
    }

    function updateProg(prog){
        $prog.width(prog+'%');
        if(prog === 100){
            window.location.href = '/train/'
        }
    }

    function randomIntFromInterval(min, max) { // min and max included
        return Math.floor(Math.random() * (max - min + 1) + min)
    }

</script>


<script>
    socket.on('finishedMove', () => {
        socket.emit('saveSet');
        /*Whether to show saved progress prompts or not
        socket.on('savedSuccess', () => {
            initToast.show();
        });
         */
    })

    socket.on('disconnect', () => {
        disToast.show();
    });
</script>